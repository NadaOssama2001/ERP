@model Presentation.Controllers.LoginModel

@{
    ViewData["Title"] = "Login";
}

<h2>@ViewData["Title"]</h2>

<form method="post">
    @Html.AntiForgeryToken()

    <div class="form-group">
        <label for="Username">Username</label>
        @Html.TextBoxFor(model => model.Username, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        <label for="Password">Password</label>
        @Html.PasswordFor(model => model.Password, new { @class = "form-control", required = "required" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</form>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger mt-3">
        <strong>Error:</strong> @ViewData.ModelState.Values.FirstOrDefault()?.Errors.FirstOrDefault()?.ErrorMessage
    </div>
}

@section Scripts {
    @* Include this if you are using client-side validation *@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>
}
